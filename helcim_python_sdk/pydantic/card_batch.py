# coding: utf-8

"""
    The Helcim API

    This API covers publicly accessible merchant actions

    The version of the OpenAPI document: 2.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class CardBatch(BaseModel):
    # Id of Card batch
    id: typing.Optional[int] = Field(None, alias='id')

    # Date Card batch is Created
    date_created: typing.Optional[str] = Field(None, alias='dateCreated')

    # Date Card batch is last updated
    date_updated: typing.Optional[str] = Field(None, alias='dateUpdated')

    # Date Card Batch is closed
    date_closed: typing.Optional[str] = Field(None, alias='dateClosed')

    # True if the batch is closed. Else false
    closed: typing.Optional[bool] = Field(None, alias='closed')

    # Id of associated Terminal
    terminal_id: typing.Optional[int] = Field(None, alias='terminalId')

    # Batch Number
    batch_number: typing.Optional[int] = Field(None, alias='batchNumber')

    # Approved sales net refunds and voids
    net_sales: typing.Optional[typing.Union[int, float]] = Field(None, alias='netSales')

    # Gross sales
    total_sales: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalSales')

    # Gross refunds
    total_refunds: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalRefunds')

    # Voided amount
    total_reversed: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalReversed')

    # Amount of voided refunds
    total_refunds_reversed: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalRefundsReversed')

    # Total number of transactions
    count_total: typing.Optional[typing.Union[int, float]] = Field(None, alias='countTotal')

    # Number of approved transactions
    count_approved: typing.Optional[typing.Union[int, float]] = Field(None, alias='countApproved')

    # Number of declined transactions
    count_declined: typing.Optional[typing.Union[int, float]] = Field(None, alias='countDeclined')
    class Config:
        arbitrary_types_allowed = True
