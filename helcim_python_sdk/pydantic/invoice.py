# coding: utf-8

"""
    The Helcim API

    This API covers publicly accessible merchant actions

    The version of the OpenAPI document: 2.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class Invoice(BaseModel):
    # Date the invoice is created.
    date_created: typing.Optional[str] = Field(None, alias='dateCreated')

    # Date the invoice is updated.
    date_updated: typing.Optional[str] = Field(None, alias='dateUpdated')

    # Date the invoice is paid.
    date_paid: typing.Optional[str] = Field(None, alias='datePaid')

    # Date the invoice is paid.
    date_issued: typing.Optional[str] = Field(None, alias='dateIssued')

    # The status of the invoice, such as due | paid | completed | refunded.
    status: typing.Optional[str] = Field(None, alias='status')

    # The id of customer associated to the invoice.
    customer_id: typing.Optional[int] = Field(None, alias='customerId')

    # The total amount of the invoice.
    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    # The total convenience fee paid for the invoice.
    convenience_fee: typing.Optional[typing.Union[int, float]] = Field(None, alias='convenienceFee')
    class Config:
        arbitrary_types_allowed = True
