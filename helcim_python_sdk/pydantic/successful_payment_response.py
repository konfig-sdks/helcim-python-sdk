# coding: utf-8

"""
    The Helcim API

    This API covers publicly accessible merchant actions

    The version of the OpenAPI document: 2.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class SuccessfulPaymentResponse(BaseModel):
    # The transaction id
    transaction_id: typing.Optional[typing.Union[int, float]] = Field(None, alias='transactionId')

    # The id of associated card batch
    card_batch_id: typing.Optional[typing.Union[int, float]] = Field(None, alias='cardBatchId')

    # The date(Mountain Time) when the transaction is created.
    date_created: typing.Optional[str] = Field(None, alias='dateCreated')

    # The status of the transaction. possible values are APPROVED | DECLINED
    status: typing.Optional[str] = Field(None, alias='status')

    # Full name of the user who processed the transaction. Default value is Helcim System
    user: typing.Optional[str] = Field(None, alias='user')

    # The type of the transaction. possible values are purchase | preauth | verify
    type: typing.Optional[str] = Field(None, alias='type')

    # The amount of processed transaction
    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    # The abbreviation of the transaction's currency
    currency: typing.Optional[str] = Field(None, alias='currency')

    # AVS Response
    avs_response: typing.Optional[str] = Field(None, alias='avsResponse')

    # CVV Response
    cvv_response: typing.Optional[str] = Field(None, alias='cvvResponse')

    # Approval Code
    approval_code: typing.Optional[str] = Field(None, alias='approvalCode')

    # Card token associated to the transaction
    card_token: typing.Optional[str] = Field(None, alias='cardToken')

    # First-6 Last-4 numbers of the card number associated to the transaction
    card_number: typing.Optional[str] = Field(None, alias='cardNumber')

    # Cardholdername associated to the transaction
    card_holder_name: typing.Optional[str] = Field(None, alias='cardHolderName')

    # Customer code associated to the transaction
    customer_code: typing.Optional[str] = Field(None, alias='customerCode')

    # Invoice number associated to the transaction
    invoice_number: typing.Optional[str] = Field(None, alias='invoiceNumber')

    # Warnings
    warning: typing.Optional[str] = Field(None, alias='warning')
    class Config:
        arbitrary_types_allowed = True
